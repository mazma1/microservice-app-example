node {
  stage('git checkout') {
    git branch: 'deploy-k8s', url: 'https://github.com/mazma1/microservice-app-example'
  }

  stage('archive') {
    archiveArtifacts artifacts: '*, auth-api/'
  }

  stage('build image') {
    sh '''
      cd ${WORKSPACE}/auth-api
      REPO="auth-api-service"
      #Build container images using Dockerfile
      docker build --no-cache -t ${REPO}:${BUILD_NUMBER} .
    '''
  }

  stage('refresh auth token') {
    sh '''
      ECR_LOGIN=$(/var/lib/jenkins/.local/bin/aws ecr get-login --no-include-email)
      ${ECR_LOGIN}
    '''
  }

  stage('push image to ECR') {
    withCredentials([string(credentialsId: 'REGISTRY-URL', variable: 'REGISTRY_URL')]) {
      sh '''
        REG_ADDRESS="${REGISTRY_URL}"
        REPO="auth-api-service"
        #Tag the build with BUILD_NUMBER version
        docker tag ${REPO}:${BUILD_NUMBER} ${REG_ADDRESS}/${REPO}:${BUILD_NUMBER}
        #Publish image
        docker push ${REG_ADDRESS}/${REPO}:${BUILD_NUMBER}
      '''
    }
  }

  stage('deploy to Kubernetes') {
    withCredentials([string(credentialsId: 'REGISTRY-URL', variable: 'REGISTRY_URL')]) {
      sh '''
        REPO="auth-api-service"
        NEW_SERVICE_IMAGE="${REGISTRY_URL}/${REPO}:${BUILD_NUMBER}"
        #Update the image of the auth-api container
        kubectl set image deployment/auth-api auth-api=${NEW_SERVICE_IMAGE}
      '''
    }
  }
}